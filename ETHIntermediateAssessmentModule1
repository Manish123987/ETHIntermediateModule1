// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

contract ExampleContract {
    address private owner;
    uint public balance;

    constructor() public {
        owner = msg.sender;
    }

    function sendEther(address payable addr) public payable {
        require(msg.value > 0, "Amount must be greater than 0");
        require(msg.sender == owner, "Only the owner can send ether");

        uint balanceBeforeTransfer = address(this).balance;
        (bool success, ) = addr.call.value(msg.value)(""); 
        require(success);

        assert(address(this).balance == balanceBeforeTransfer - msg.value);
    }

    function withdrawEther(uint amount) public {
        assert(balances[msg.sender] >= amount);
        balances[msg.sender] -= amount;
        payable(msg.sender).transfer(amount);
    }

    function depositEther() public payable {
        balances[msg.sender] += msg.value;
        totalSupply += msg.value;
        assert(address(this).balance >= totalSupply);
    }
}
